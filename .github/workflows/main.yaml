name: "Checks"
on:
  - pull_request

jobs:
  build:
    name: "Build"
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16.13.0'
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Restore crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./Makefile') }}
      - name: Install yarn
        run: npm install -g yarn
      - name: Install dependencies
        run: |
          yarn install
          make deps
      - name: Build WASM file
        run: make build
      - name: Cache/restore binaries
        uses: actions/cache@v1
        with:
          path: ./build
          key: ${{ runner.os }}-${{ github.run_id }}
      - name: Save crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./Makefile') }}

  test-api:
    name: "Test with Lotus RPC"
    needs: [build]
    env:
      NODE_URL: ${{ secrets.NODE_URL }}
      NODE_TOKEN: ${{ secrets.NODE_TOKEN }}
      SEED: ${{ secrets.SEED }}
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16.13.0'
      - name: Cache/restore binaries
        uses: actions/cache@v1
        with:
          path: ./build
          key: ${{ runner.os }}-${{ github.run_id }}
      - name: Install yarn
        run: npm install -g yarn
      - name: Install dependencies
        run: yarn install
      - name: Run tests rpc
        run: yarn tests:rpc

  test-web-page:
    name: "Test web page"
    needs: [build]
    env:
      NODE_URL: ${{ secrets.NODE_URL }}
      NODE_TOKEN: ${{ secrets.NODE_TOKEN }}
      SEED: ${{ secrets.SEED }}
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16.13.0'
      - name: Cache/restore binaries
        uses: actions/cache@v1
        with:
          path: ./build
          key: ${{ runner.os }}-${{ github.run_id }}
      - name: Install yarn
        run: npm install -g yarn
      - name: Run tests
        run: | 
          cd tests/browser
          yarn install
          yarn build   

  test-rust-vm:
    name: "Test with Rust VM"
    needs: [build]
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache/restore binaries
        uses: actions/cache@v1
        with:
          path: ./build
          key: ${{ runner.os }}-${{ github.run_id }}
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-03-31
          override: true
      - name: Restore crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./tests/local-vm/Cargo.lock') }}
      - name: Test WASM on Rust VM
        run: |
          cd tests/local-vm
          rustup target add wasm32-unknown-unknown
          RUST_BACKTRACE=1 cargo r
      - name: Save crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./tests/local-vm/Cargo.lock') }}

  benchmark:
    name: "Benchmark"
    needs: [build]
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-03-31
          override: true
      - name: Install golang
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.17.0'
      - name: Restore crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./benchmarking/Cargo.lock') }}
      - name: Test WASM on Rust VM
        run: |
          cd benchmarking
          sudo apt-get install tree
          rustup target add wasm32-unknown-unknown
          make install
          make install-llvm-ci
          make install-tinygo
          make benchmark
      - name: "Save results"
        uses: actions/upload-artifact@v3
        with:
          name: benchmark_results
          path: ./benchmarking/benchmark_results.csv
      - name: Save crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./benchmarking/Cargo.lock') }}
