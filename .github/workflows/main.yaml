name: "Checks"
on:
  - push

jobs:
  build:
    name: "Build"
    timeout-minutes: 5
    runs-on: self-hosted
    env:
      VERDACCIO_TOKEN: ${{ secrets.VERDACCIO_READ_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16.13.0'
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install yarn
        run: npm install -g yarn
      - name: Set npmrc
        run: |
          yarn config set @zondax:registry https://verdaccio.zondax.net/
          npm config set //verdaccio.zondax.net/:_authToken "$VERDACCIO_TOKEN"
          npm config set //verdaccio.zondax.net/:always-auth true
      - name: Install dependencies
        run: |
          yarn install
          make deps
      - name: Build WASM file
        run: make build
      - name: Cache/restore binaries
        uses: actions/cache@v1
        with:
          path: ./build
          key: ${{ runner.os }}-${{ github.run_id }}

  test-lotus:
    name: "Test in Lotus"
    needs: [build]
    timeout-minutes: 5
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache/restore binaries
        uses: actions/cache@v1
        with:
          path: ./build
          key: ${{ runner.os }}-${{ github.run_id }}
      - name: Install Hello Actor in Lotus
        run: |
          lotus version
          lotus chain install-actor build/release-final.wasm >> install.txt
          cat install.txt
      - name: Create Hello Actor in Lotus
        run: |
          cid=$(sed -n 's/^Actor Code CID: //p' install.txt)
          echo $cid
          lotus chain create-actor $cid >> create.txt
          cat create.txt
      - name: Get status actor
        run: |
          address=$(sed -n 's/^ID Address: //p' create.txt)
          echo $address
          lotus state get-actor $address >> actor.txt
          cat actor.txt
      - name: Get chain state
        run: |
          head=$(sed -n 's/^Head:		//p' actor.txt)
          echo $head
          lotus chain get $head
      - name: Invoke actor's method 2
        run: |
          address=$(sed -n 's/^ID Address: //p' create.txt)
          lotus chain invoke $address 2
      - name: Get status actor
        run: |
          address=$(sed -n 's/^ID Address: //p' create.txt)
          echo $address
          rm actor.txt
          lotus state get-actor $address >> actor.txt
          cat actor.txt
      - name: Get chain state
        run: |
          head=$(sed -n 's/^Head:		//p' actor.txt)
          echo $head
          lotus chain get $head


  test-rust-vm:
    name: "Test in Rust VM"
    needs: [build]
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache/restore binaries
        uses: actions/cache@v1
        with:
          path: ./build
          key: ${{ runner.os }}-${{ github.run_id }}
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-03-31
          override: true
      - name: Restore crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./testing/Cargo.lock') }}
      - name: Test WASM on Rust VM
        run: |
          cd testing
          rustup target add wasm32-unknown-unknown
          RUST_BACKTRACE=1 cargo r
      - name: Save crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./testing/Cargo.lock') }}

  benchmark:
    name: "Benchmark"
    #needs: [test-rust-vm, test-lotus]
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache/restore binaries
        uses: actions/cache@v1
        with:
          path: ./build
          key: ${{ runner.os }}-${{ github.run_id }}
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-03-31
          override: true
      - name: Restore crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./testing/Cargo.lock') }}
      - name: Test WASM on Rust VM
        run: |
          cd benchmarking
          apt install tree
          rustup target add wasm32-unknown-unknown
          make install
          make benchmark
      - name: Save crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./testing/Cargo.lock') }}
